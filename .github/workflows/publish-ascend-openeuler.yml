name: Publish ascend-mindspore-openeuler
on:
  workflow_dispatch:
  push:
    tags:
      - v*
env:
  BUILD_TYPE: Release
  IMAGE_NAME_DEV: "zxk114/modelbox-develop-mindspore_1.3.0-cann_5.0.2-openeuler-x86_64"
  IMAGE_NAME_RUN: "zxk114/modelbox-runtime-mindspore_1.3.0-cann_5.0.2-openeuler-x86_64"
  IMAGE_VERSION: "v1.1.3"

jobs:
  compile:
    runs-on: ubuntu-latest
    container: modelbox/modelbox_base_openeuler:latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
        echo "Asia/Shanghai" > /etc/timezone
        yum update -y
        yum install -y vim gcc gcc-c++ make cmake libnsl python3-perf rsyslog doxygen pciutils gdb net-tools zlib-devel \
                rpm-build gcc-gfortran alsa-lib nss-devel fuse-devel gdbm-devel krb5-devel expat-devel curl-devel bzip2-devel \
                boost-devel ncurses-devel libxml2-devel libssh2-devel openssh-server python3-devel glibc-debuginfo libatomic \
                git clang xauth graphviz-devel sqlite-devel openssl-devel readline-devel mesa-libGL-devel protobuf-c-devel
        rm -f /usr/bin/python3 /usr/bin/python
        ln -s python3.7 /usr/bin/python3
        ln -s python3 /usr/bin/python
        ls -lh /usr/bin/python*
        /usr/bin/python -V && /usr/bin/python3 -V
        echo "Install dependencies success"
    - name: Install ThirdParty
      run: |
        curl https://nodejs.org/dist/v16.13.2/node-v16.13.2-linux-x64.tar.xz|tar -xJ
        cp -af node-v16.13.2-linux-x64/{bin,include,lib,share} /usr/local/
        npm install -g npm@latest
        npm install -g @angular/cli
        npm -v && node -v
        npm cache clean --force

        curl -LJO https://download.java.net/java/GA/jdk17/0d483333a00540d886896bac774ff48b/35/GPL/openjdk-17_linux-x64_bin.tar.gz
        curl -LJO https://dlcdn.apache.org/maven/maven-3/3.8.4/binaries/apache-maven-3.8.4-bin.tar.gz
        curl -LJO https://github.com/zxk114/modelbox/releases/download/binary/obs-dev.tar.gz
        curl -LJO https://github.com/zxk114/modelbox/releases/download/binary/cpprestsdk-dev.tar.gz
        curl -LJO https://github.com/zxk114/modelbox/releases/download/binary/duktape-dev.tar.gz
        curl -LJO https://github.com/zxk114/modelbox/releases/download/binary/ffmpeg-dev.tar.gz
        curl -LJO https://github.com/zxk114/modelbox/releases/download/binary/opencv-dev.tar.gz
        for tar in *.tar.gz; do tar zxf $tar -C /usr/local/; done

        python3 -m pip install --upgrade pip
        python3 -m pip install --no-cache-dir wheel attrs psutil decorator numpy protobuf scipy sympy cffi grpcio grpcio-tools requests pillow
        python3 -m pip install --no-cache-dir https://ms-release.obs.cn-north-4.myhuaweicloud.com/1.3.0/MindSpore/ascend/x86_64/mindspore_ascend-1.3.0-cp37-cp37m-linux_x86_64.whl
    - name: CMake
      run: |
        pwd
        export MINDSPORE_PATH=/usr/local/lib/python3.7/site-packages/mindspore
        export DDK_PATH=/usr/local/Ascend/ascend-toolkit/latest/acllib
        export DRIVER_PATH=/usr/local/Ascend/driver
        export LD_LIBRARY_PATH=/usr/local/Ascend/driver/lib64:/usr/local/Ascend/driver/lib64/driver:/usr/local/Ascend/driver/lib64/common:/usr/local/Ascend/ascend-toolkit/latest/fwkacllib/lib64:\
                               /usr/local/Ascend/ascend-toolkit/latest/acllib/lib64:/usr/local/Ascend/ascend-toolkit/latest/atc/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
        export JAVA_HOME=/usr/local/jdk-17
        export MAVEN_HOME=/usr/local/apache-maven-3.8.4
        export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig${PKG_CONFIG_PATH:+:${PKG_CONFIG_PATH}}
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DWITH_WEB_UI=on
    - name: Build
      working-directory: ./build
      run: |
        make package -j4
        ls -lh release
        filecount=$(ls release | wc -l)
        dpkgcount=$(ls release | egrep "*.rpm" | wc -l)
        artifacts_file=$(ls ${artifacts_path} | grep "ascend"| wc -l)
        if [ ${filecount} -ge 13 ] && [ ${dpkgcount} -ge 11 ] && [ ${artifacts_file} -eq 2 ]; then
            echo "compile success"
        else
            echo "compile failed"
            exit 1
        fi
    - name: Prepare Artifact
      run: |
        pwd
        mkdir ./artifact
        ls -lh .
        cp -af ./build/release ./artifact/
        ls -lh ./artifact
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: modelbox-artifact
        path: ./artifact

  build_develop_image:
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME_zxk }}
          password: ${{ secrets.DOCKERHUB_TOKEN_zxk }}
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: modelbox-artifact
          path: ./
      - name: Prepare and Recheck
        run: |
          ls -lh .
          ls -lh ./release
      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./docker/Dockerfile.ascend.develop.openeuler
          tags: |
            ${{ env.IMAGE_NAME_DEV }}:latest
            ${{ env.IMAGE_NAME_DEV }}:${{ env.IMAGE_VERSION }}

  build_runtime_image:
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME_zxk }}
          password: ${{ secrets.DOCKERHUB_TOKEN_zxk }}
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: modelbox-artifact
          path: ./
      - name: Prepare and Recheck
        run: |
          ls -lh .
          ls -lh ./release
      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./docker/Dockerfile.ascend.runtime.openeuler
          tags: |
            ${{ env.IMAGE_NAME_RUN }}:latest
            ${{ env.IMAGE_NAME_RUN }}:${{ env.IMAGE_VERSION }}
