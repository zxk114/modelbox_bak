FROM modelbox/modelbox_base_ubuntu:latest

FROM ubuntu:18.04

COPY release /opt/release
COPY --from=0 /usr/local/Ascend /usr/local/Ascend

ARG ASCEND_PATH=/usr/local/Ascend
ENV ASCEND_AICPU_PATH=${ASCEND_PATH}/nnrt/latest
ENV ASCEND_OPP_PATH=${ASCEND_PATH}/nnrt/latest/opp
ENV DDK_PATH=${ASCEND_PATH}/nnrt/latest/acllib
ENV DRIVER_PATH=${ASCEND_PATH}/driver

ENV LD_LIBRARY_PATH=\
${ASCEND_PATH}/driver/lib64:\
${ASCEND_PATH}/driver/lib64/driver:\
${ASCEND_PATH}/driver/lib64/common:\
${ASCEND_PATH}/driver/lib64/driver:$LD_LIBRARY_PATH

ENV LD_LIBRARY_PATH=\
${ASCEND_PATH}/nnrt/latest/acllib/lib64:$LD_LIBRARY_PATH

ENV PYTHONPATH=\
${ASCEND_PATH}/nnrt/latest/pyACL/python/site-packages/acl:$PYTHONPATH

RUN ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo "Asia/Shanghai" > /etc/timezone && \
    apt update && apt upgrade -y && \
    apt remove --purge python3-apt && \
    apt install -y python3.7-dev python3-pip python3-apt python3-setuptools && \
    apt install --no-install-recommends -y dbus systemd systemd-cron rsyslog iproute2 gnupg2 curl ca-certificates && \
    rm -f /usr/bin/python3 && \
    ln -s python3.7 /usr/bin/python3 && \
    ln -s python3 /usr/bin/python && \
    apt install -y \
        build-essential sudo bash unzip ffmpeg curl pkg-config\
        python3-dev python3-pip python3-setuptools python3-wheel python3-numpy python3-opencv \
        libssl1.1 libcpprest libswscale4 libavformat57 graphviz libprotobuf-c1 duktape libmosquitto1 && \
    apt clean all && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN mkdir -p /root/.pip && \
    echo "[global]" > /root/.pip/pip.conf && \
    echo "index-url = https://pypi.mirrors.ustc.edu.cn/simple" >>/root/.pip/pip.conf && \
    echo "trusted-host = pypi.mirrors.ustc.edu.cn" >>/root/.pip/pip.conf && \
    echo "timeout = 120" >>/root/.pip/pip.conf && \
    python3 -m pip install --upgrade pip && \
    python3 -m pip install --no-cache-dir wheel attrs psutil decorator numpy protobuf scipy sympy cffi grpcio grpcio-tools requests pillow && \
    python3 -m pip install --no-cache-dir https://ms-release.obs.cn-north-4.myhuaweicloud.com/1.3.0/MindSpore/ascend/x86_64/mindspore_ascend-1.3.0-cp37-cp37m-linux_x86_64.whl && \
    python3 -m pip install --no-cache-dir ${ASCEND_PATH}/ascend-toolkit/latest/atc/lib64/topi-0.4.0-py3-none-any.whl && \
    python3 -m pip install --no-cache-dir ${ASCEND_PATH}/ascend-toolkit/latest/atc/lib64/te-0.4.0-py3-none-any.whl && \
    echo "${ASCEND_PATH}/driver/lib64" >>/etc/ld.so.conf && \
    echo "${ASCEND_PATH}/driver/lib64/driver" >>/etc/ld.so.conf && \
    echo "${ASCEND_PATH}/driver/lib64/common" >>/etc/ld.so.conf && \
    echo "${ASCEND_PATH}/ascend-toolkit/latest/acllib/lib64" >>/etc/ld.so.conf && \
    echo "/usr/local/lib/python3.7/dist-packages/mindspore/lib" >>/etc/ld.so.conf

RUN umask 0022 && \
    curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash - && \
    apt-get install -y nodejs && \
    npm install -g npm@latest && npm -v && node -v && \
    npm install -g @angular/cli && \
    npm cache clean --force && \
    curl -LJO https://github.com/zxk114/modelbox/releases/download/binary/obs-dev.tar.gz && \
    tar zxf obs-dev.tar.gz -C /usr/local/ && \
    curl https://download.java.net/java/GA/jdk17.0.1/2a2082e5a09d4267845be086888add4f/12/GPL/openjdk-17.0.1_linux-x64_bin.tar.gz|tar zxC /usr/local/ && \
    curl https://dlcdn.apache.org/maven/maven-3/3.8.4/binaries/apache-maven-3.8.4-bin.tar.gz|tar zxC /usr/local/ && \
    rm -rf  /usr/local/apache-maven-3.8.4/lib/jansi-native/Windows && \
    # 其它配置
    rm -rf /root/* && \
    rm -f /usr/bin/python && ln -s python3 /usr/bin/python && \
    echo "/usr/local/lib" >>  /etc/ld.so.conf && \
    sed -i 's/^\(module(load="imklog")\)/#\1/' /etc/rsyslog.conf && \
    echo "export JAVA_HOME=/usr/lib/jvm/jdk-17" >> ~/.bashrc && \
    echo "export PATH=\${JAVA_HOME}/bin:$PATH" >> ~/.bashrc

RUN python3 -m pip install --no-cache-dir pyyaml opencv-python && \
    python3 -m pip install --no-cache-dir /opt/release/python/modelbox-*.whl && \
    ls /opt/release|egrep 'devel|document|solution'|xargs -i rm -f /opt/release/{} && \
    dpkg -i /opt/release/*.deb && \
    groupadd HwHiAiUser && \
    useradd -g HwHiAiUser -d /home/HwHiAiUser -m HwHiAiUser && \
    chown -R HwHiAiUser.HwHiAiUser /usr/local/Ascend && \
    usermod -G HwHiAiUser modelbox && \
    rm -rf /root/* /root/.cache && \
    (cd /lib/systemd/system/sysinit.target.wants/; for i in *; \
    do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
    rm -f /lib/systemd/system/multi-user.target.wants/*; \
    rm -f /etc/systemd/system/*.wants/*; \
    rm -f /lib/systemd/system/local-fs.target.wants/*; \
    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
    rm -f /lib/systemd/system/basic.target.wants/*; \
    rm -f /lib/systemd/system/anaconda.target.wants/*; \
    sed -i 's/^SystemMaxUse=.*/SystemMaxUse=16M/g' /etc/systemd/journald.conf && \
    sed -i '/ForwardToSyslog/s/^#//g' /etc/systemd/journald.conf && \
    systemctl set-default multi-user.target && \
    systemctl mask dev-hugepages.mount sys-fs-fuse-connections.mount && \
    ldconfig &>/dev/null && systemctl enable modelbox

VOLUME ["/sys/fs/cgroup", "/tmp", "/run", "/run/lock"]
STOPSIGNAL SIGRTMIN+3

CMD ["/sbin/init", "--log-target=journal"]