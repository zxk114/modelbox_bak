ARG BASE_IMAGE=openeuler-20.03-lts-sp2:latest
FROM ${BASE_IMAGE} as base

ARG CUDA_VER="11-2"
ARG CUDA_NUM="cuda112"
ARG CUDA_VERSION="11.2"
ARG CUDA_BUILD="11.2.2-460.32.03"
ARG TF_VERSION="2.6.0"
ARG TRT_VERSION=""
ARG TORCH_VERSION=""
ARG NVIDIA_CUDA_VERSION="11.2.2"
ARG NVIDIA_REQUIRE_CUDA="cuda>=11.2 brand=tesla,driver>=418,driver<419 brand=tesla,driver>=440,driver<441 brand=tesla,driver>=450,driver<451 brand=tesla,driver>=460,driver<461"

ADD *.tar.gz /usr/local/
COPY release /opt/release

WORKDIR /root

RUN ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo "Asia/Shanghai" > /etc/timezone && \
    yum update -y && \
    yum install -y curl boost libnsl libssh2 libatomic mesa-libGL graphviz protobuf-c \
        python3-perf rsyslog pciutils fuse libxml2 openssl && \
    ls -lh /usr/bin/python* && ln -s python3 /usr/bin/python && yum clean all && \
    rm -rf /var/cache /tmp/* /var/tmp/*

RUN yum localinstall -y \
        http://192.168.59.112:8080/nv-tensorrt-repo-rhel7-${TRT_VERSION}-1-1.x86_64.rpm \
        http://192.168.59.112:8080/cuda-repo-rhel7-${CUDA_VER}-local-${CUDA_BUILD}-1.0-1.x86_64.rpm && \
    rpm -ivh http://192.168.59.112:8080/cuda-repo-rhel7-10-2-local-10.2.1-1.x86_64.rpm --force && \
    rpm -ivh http://192.168.59.112:8080/cuda-repo-rhel7-10-2-local-10.2.2-1.x86_64.rpm --force && \
    yum install --nogpgcheck --setopt=obsoletes=0 -y \
        tensorrt \
        cuda-nvtx-${CUDA_VER} \
        cuda-libraries-${CUDA_VER} && \
    ln -s cuda-${CUDA_VERSION} /usr/local/cuda && \
    yum remove -y \
        nv-tensorrt-repo-rhel7-${TRT_VERSION} \
        cuda-repo-rhel7-${CUDA_VER}-local$(if [ "$CUDA_VERSION" != "11.2" ];then echo "-${CUDA_BUILD}";fi) && \
    rm -rf /usr/src/tensorrt && \
    find / -name libcublas.so.${CUDA_VERSION%.*}|xargs -i ln -s {} /usr/local/lib64/libcublas.so.${CUDA_VERSION} && \
    yum clean all && rm -rf /root/* /var/cache

RUN umask 0022 && \
    # 安装libtorch
    curl -O http://192.168.59.112:8080/libtorch-cxx11-abi-shared-with-deps-${TORCH_VERSION}.zip && \
    unzip libtorch-cxx11-abi-shared-with-deps-${TORCH_VERSION}.zip -d /root >/dev/null 2>&1 && \
    cp -af libtorch/lib /usr/local/ && \
    # 安装jdk
    mkdir /usr/lib/jvm && \
    curl http://192.168.59.112:8080/jdk-17_linux-x64_bin.tar.gz|tar zxC /usr/lib/jvm/ && \
    rm -rf /root/* /root/.pip

RUN mkdir -p /root/.pip && \
    echo "[global]" > /root/.pip/pip.conf && \
    echo "index-url = https://pypi.mirrors.ustc.edu.cn/simple" >>/root/.pip/pip.conf && \
    echo "trusted-host = pypi.mirrors.ustc.edu.cn" >>/root/.pip/pip.conf && \
    echo "timeout = 120" >>/root/.pip/pip.conf && \
    echo "/usr/local/lib" >> /etc/ld.so.conf && \
    echo "/usr/local/lib64" >> /etc/ld.so.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf && \
    echo "export PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig" > /etc/profile.d/pkgconfig.sh && \
    python3 -m pip install -U pip && \
    python3 -m pip install --no-cache-dir numpy && \
    python3 -m pip install --no-cache-dir wheel pyyaml requests opencv-python pillow tensorflow-gpu==${TF_VERSION} && \
    python3 -m pip install --no-cache-dir /opt/release/python/modelbox-*.whl && \
    rpm -ivh /opt/release/*.rpm && \
    rm -rf /root/* /opt/release /opt/*.whl && \
    ls -Al /root|grep ^d|awk '{print $9}'|xargs rm -rf && \
    find /usr/local/ -name "*.a" | xargs rm -f && \
    (cd /lib/systemd/system/sysinit.target.wants/; for i in *; \
    do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
    rm -f /lib/systemd/system/multi-user.target.wants/*; \
    rm -f /etc/systemd/system/*.wants/*; \
    rm -f /lib/systemd/system/local-fs.target.wants/*; \
    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
    rm -f /lib/systemd/system/basic.target.wants/*; \
    rm -f /lib/systemd/system/anaconda.target.wants/*; \
    sed -i 's/^SystemMaxUse=.*/SystemMaxUse=16M/g' /etc/systemd/journald.conf && \
    sed -i '/ForwardToSyslog/s/^#//g' /etc/systemd/journald.conf && \
    sed -i 's/^\(module(load="imklog")\)/#\1/' /etc/rsyslog.conf && \
    echo "export JAVA_HOME=/usr/local/jdk-17" >> /etc/bashrc && \
    echo "export PATH=\${JAVA_HOME}/bin:$PATH" >> /etc/bashrc && \
    systemctl set-default multi-user.target && \
    systemctl mask dev-hugepages.mount sys-fs-fuse-connections.mount && \
    ldconfig &>/dev/null && systemctl enable modelbox

VOLUME ["/sys/fs/cgroup", "/tmp", "/run", "/run/lock"]
STOPSIGNAL SIGRTMIN+3

LABEL com.nvidia.volumes.needed="nvidia_driver" com.nvidia.cuda.verison="${NVIDIA_CUDA_VERSION}"

ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib64:/usr/local/lib:$LD_LIBRARY_PATH
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=video,compute,utility
ENV NVIDIA_REQUIRE_CUDA="${NVIDIA_REQUIRE_CUDA}"

CMD ["/sbin/init", "--log-target=journal"]

