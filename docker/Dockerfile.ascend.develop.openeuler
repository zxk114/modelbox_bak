FROM modelbox/modelbox_base_openeuler:latest

FROM openeuler/openeuler:20.03-lts-sp2

COPY release /opt/release
COPY docker/pkgconfig /usr/lib/pkgconfig
COPY --from=0 /usr/local/Ascend /usr/local/Ascend

ARG ASCEND_PATH=/usr/local/Ascend
ENV LOCAL_ASCEND=/usr/local/Ascend
ENV ASCEND_AICPU_PATH=${ASCEND_PATH}/ascend-toolkit/latest
ENV ASCEND_OPP_PATH=${ASCEND_PATH}/ascend-toolkit/latest/opp
ENV TOOLCHAIN_HOME=${ASCEND_PATH}/ascend-toolkit/latest/toolkit
ENV TBE_IMPL_PATH=${ASCEND_PATH}/ascend-toolkit/latest/opp/op_impl/build-in/ai_core/tbe
ENV MINDSPORE_PATH=/usr/local/lib/python3.7/site-packages/mindspore
ENV DDK_PATH=${ASCEND_PATH}/ascend-toolkit/latest/acllib
ENV DRIVER_PATH=${ASCEND_PATH}/driver

ENV PATH=\
${ASCEND_PATH}/ascend-toolkit/latest/atc/bin:\
${ASCEND_PATH}/ascend-toolkit/latest/fwkacllib/bin:\
${ASCEND_PATH}/ascend-toolkit/latest/fwkacllib/ccec_compiler/bin:\
${ASCEND_PATH}/ascend-toolkit/latest/atc/ccec_compiler/bin${PATH:+:${PATH}}

ENV PYTHONPATH=\
${ASCEND_PATH}/ascend-toolkit/latest/atc/python/site-packages:\
${ASCEND_PATH}/ascend-toolkit/latest/toolkit/python/site-packages:\
${ASCEND_PATH}/ascend-toolkit/latest/fwkacllib/python/site-packages:\
${ASCEND_PATH}/ascend-toolkit/latest/opp/op_impl/build-in/ai_core/tbe:\
${ASCEND_PATH}/ascend-toolkit/latest/pyACL/python/site-packages/acl${PYTHONPATH:+:${PYTHONPATH}}

ENV LD_LIBRARY_PATH=\
${ASCEND_PATH}/driver/lib64:\
${ASCEND_PATH}/driver/lib64/driver:\
${ASCEND_PATH}/driver/lib64/common:\
${ASCEND_PATH}/ascend-toolkit/latest/fwkacllib/lib64:\
${ASCEND_PATH}/ascend-toolkit/latest/acllib/lib64:\
${ASCEND_PATH}/ascend-toolkit/latest/atc/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

RUN ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo "Asia/Shanghai" > /etc/timezone && \
    yum update -y && \
    yum install -y vim gcc gcc-c++ make cmake libnsl python3-perf rsyslog doxygen pciutils gdb net-tools zlib-devel \
            rpm-build gcc-gfortran alsa-lib nss-devel fuse-devel gdbm-devel krb5-devel expat-devel curl-devel bzip2-devel \
            boost-devel ncurses-devel libxml2-devel libssh2-devel openssh-server python3-devel glibc-debuginfo libatomic \
            git clang xauth graphviz-devel sqlite-devel openssl-devel readline-devel mesa-libGL-devel protobuf-c-devel && \
    ls -lh /usr/bin/python* && \
    rm -f /usr/bin/python3 /usr/bin/python && \
    ln -s python3.7 /usr/bin/python3 && \
    ln -s python3 /usr/bin/python && \
    yum clean all && rm -rf /var/cache /tmp/* /var/tmp/*

RUN mkdir -p /root/.pip && \
    echo "[global]" > /root/.pip/pip.conf && \
    echo "index-url = https://pypi.mirrors.ustc.edu.cn/simple" >>/root/.pip/pip.conf && \
    echo "trusted-host = pypi.mirrors.ustc.edu.cn" >>/root/.pip/pip.conf && \
    echo "timeout = 120" >>/root/.pip/pip.conf && \
    python3 -m pip install --upgrade pip && \
    python3 -m pip install --no-cache-dir wheel attrs psutil decorator numpy protobuf scipy sympy cffi grpcio grpcio-tools requests pillow && \
    python3 -m pip install --no-cache-dir https://ms-release.obs.cn-north-4.myhuaweicloud.com/1.3.0/MindSpore/ascend/x86_64/mindspore_ascend-1.3.0-cp37-cp37m-linux_x86_64.whl && \
    python3 -m pip install --no-cache-dir ${ASCEND_PATH}/ascend-toolkit/latest/atc/lib64/topi-0.4.0-py3-none-any.whl && \
    python3 -m pip install --no-cache-dir ${ASCEND_PATH}/ascend-toolkit/latest/atc/lib64/te-0.4.0-py3-none-any.whl && \
    echo "${ASCEND_PATH}/driver/lib64" >>/etc/ld.so.conf && \
    echo "${ASCEND_PATH}/driver/lib64/driver" >>/etc/ld.so.conf && \
    echo "${ASCEND_PATH}/driver/lib64/common" >>/etc/ld.so.conf && \
    echo "${ASCEND_PATH}/ascend-toolkit/latest/fwkacllib/lib64" >>/etc/ld.so.conf && \
    echo "/usr/local/lib/python3.7/site-packages/mindspore/lib" >>/etc/ld.so.conf

RUN curl https://nodejs.org/dist/v16.13.2/node-v16.13.2-linux-x64.tar.xz|tar -xJ && \
    cp -af node-v16.13.2-linux-x64/{bin,include,lib,share} /usr/local/ && \
    npm config set registry https://registry.npm.taobao.org && \
    npm install -g npm@latest && npm -v && node -v && \
    npm install -g @angular/cli && \
    npm cache clean --force && \
    curl -LJO https://github.com/zxk114/modelbox/releases/download/binary/obs-dev.tar.gz && \
    tar zxf obs-dev.tar.gz -C /usr/local/ && \
    curl https://download.java.net/java/GA/jdk17.0.1/2a2082e5a09d4267845be086888add4f/12/GPL/openjdk-17.0.1_linux-x64_bin.tar.gz|tar zxC /usr/local/ && \
    curl https://dlcdn.apache.org/maven/maven-3/3.8.4/binaries/apache-maven-3.8.4-bin.tar.gz|tar zxC /usr/local/ && \
    rm -rf  /usr/local/apache-maven-3.8.4/lib/jansi-native/Windows && \
    rm -rf /root/* && \
    rm -f /usr/bin/python && ln -s python3 /usr/bin/python && \
    sed -i "32aPermitRootLogin yes" /etc/ssh/sshd_config && \
    sed -i 's/^\(module(load="imklog")\)/#\1/' /etc/rsyslog.conf && \
    echo 'export TMOUT=0' >> /etc/bashrc && \
    echo "export JAVA_HOME=/usr/local/jdk-17" >> /etc/bashrc && \
    echo "export MAVEN_HOME=/usr/local/apache-maven-3.8.4" >> /etc/bashrc && \
    echo "export PATH=\${JAVA_HOME}/bin:\${MAVEN_HOME}/bin:$PATH" >> /etc/bashrc && \
    echo 'export PS1="\[\e[35;1m\][\u@\h \W]$ \[\e[0m\]"' >> /etc/bashrc && \
    echo '[ -n "${SSH_TTY}" ] && export $(cat /proc/1/environ|tr "\\0" "\\n"|xargs)' >> /etc/bashrc

RUN python3 -m pip install --no-cache-dir pyyaml opencv-python && \
    python3 -m pip install --no-cache-dir /opt/release/python/modelbox-*.whl && \
    rpm -ivh /opt/release/*.rpm && \
    groupadd HwHiAiUser && \
    useradd -g HwHiAiUser -d /home/HwHiAiUser -m HwHiAiUser && \
    chown -R HwHiAiUser.HwHiAiUser /usr/local/Ascend && \
    usermod -G HwHiAiUser modelbox && \
    rm -rf /root/* /root/.cache && \
    (cd /lib/systemd/system/sysinit.target.wants/; for i in *; \
    do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
    rm -f /lib/systemd/system/multi-user.target.wants/*; \
    rm -f /etc/systemd/system/*.wants/*; \
    rm -f /lib/systemd/system/local-fs.target.wants/*; \
    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
    rm -f /lib/systemd/system/basic.target.wants/*; \
    rm -f /lib/systemd/system/anaconda.target.wants/*; \
    sed -i 's/^SystemMaxUse=.*/SystemMaxUse=16M/g' /etc/systemd/journald.conf && \
    sed -i '/ForwardToSyslog/s/^#//g' /etc/systemd/journald.conf && \
    systemctl set-default multi-user.target && \
    systemctl mask dev-hugepages.mount sys-fs-fuse-connections.mount && \
    ldconfig &>/dev/null && systemctl enable modelbox sshd systemd-journald

VOLUME ["/sys/fs/cgroup", "/tmp", "/run", "/run/lock"]
STOPSIGNAL SIGRTMIN+3

CMD ["/sbin/init", "--log-target=journal"]